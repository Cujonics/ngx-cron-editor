import { OnInit } from '@angular/core';
import { CronOptions } from './CronOptions';
import { ControlValueAccessor, FormBuilder, FormControl, FormGroup } from '@angular/forms';
import { ThemePalette } from '@angular/material/core';
import * as i0 from "@angular/core";
export declare const CRON_VALUE_ACCESSOR: any;
export declare class CronGenComponent implements OnInit, ControlValueAccessor {
    private fb;
    backgroundColor: ThemePalette;
    color: ThemePalette;
    disabled: boolean;
    options: CronOptions;
    activeTab: string;
    selectOptions: {
        months: number[];
        monthWeeks: string[];
        days: string[];
        minutes: number[];
        fullMinutes: number[];
        seconds: number[];
        hours: number[];
        monthDays: number[];
        monthDaysWithLasts: string[];
        monthDaysWithOutLasts: string[];
        hourTypes: string[];
    };
    weekdays: string[];
    state: any;
    cronForm: FormControl;
    minutesForm: FormGroup;
    hourlyForm: FormGroup;
    dailyForm: FormGroup;
    weeklyForm: FormGroup;
    monthlyForm: FormGroup;
    yearlyForm: FormGroup;
    advancedForm: FormGroup;
    protected _tabs: string[];
    protected _minutesRegex: RegExp;
    protected _hourlyRegex: RegExp;
    protected _dailyEveryDayRegex: RegExp;
    protected _dailyEveryWeekDayRegex: RegExp;
    protected _weeklyRegex: RegExp;
    protected _monthlySpecificDayRegex: RegExp;
    protected _monthlySpecificWeekDayRegex: RegExp;
    protected _yearlySpecificMonthDayRegex: RegExp;
    protected _yearlySpecificMonthWeekRegex: RegExp;
    private localCron;
    private isDirty;
    constructor(fb: FormBuilder);
    get cron(): string;
    set cron(value: string);
    get isCronFlavorQuartz(): boolean;
    get isCronFlavorStandard(): boolean;
    get removeSeconds(): boolean;
    get hideSelectSuffixes(): boolean;
    get removeYears(): boolean;
    get yearDefaultChar(): "" | "*";
    get weekDayDefaultChar(): "*" | "?";
    get monthDayDefaultChar(): "*" | "?";
    get radix(): number;
    onTabFocus(idx: number): void;
    ngOnInit(): Promise<void>;
    dayDisplay(day: string): string;
    monthWeekDisplay(monthWeekNumber: string): string;
    monthDisplay(month: number): string;
    monthDayDisplay(month: string): string;
    onChange: (_: any) => void;
    onTouched: () => void;
    writeValue(obj: string): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    _testComputeMinutesCron(state: any): string;
    _testComputeHourlyCron(state: any): string;
    _testComputeDailyCron(state: any): string;
    _testComputeWeeklyCron(state: any): string;
    _testComputeMonthlyCron(state: any): string;
    _testComputeYearlyCron(state: any): string;
    hourToCron(hour: number, hourType: string): number;
    private computeMinutesCron;
    private computeHourlyCron;
    private computeDailyCron;
    private computeWeeklyCron;
    private computeMonthlyCron;
    private computeYearlyCron;
    private computeAdvancedExpression;
    private getAmPmHour;
    private getHourType;
    private throwErrors;
    private handleModelChange;
    private cronIsValid;
    private getDefaultState;
    private getOrdinalSuffix;
    private getSelectOptions;
    private getRange;
    static ɵfac: i0.ɵɵFactoryDef<CronGenComponent, never>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<CronGenComponent, "cron-editor", never, { "backgroundColor": "backgroundColor"; "color": "color"; "disabled": "disabled"; "options": "options"; "cron": "cron"; }, {}, never, never>;
}
//# sourceMappingURL=cron-editor.component.d.ts.map